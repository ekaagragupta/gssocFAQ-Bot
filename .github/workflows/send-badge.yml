name: Send Contributor Badge

on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Pull Request number to comment on"
        required: true
      username:
        description: "GitHub username (for testing only)"
        required: false
        default: "test-user"

permissions:
  pull-requests: write
  contents: read


jobs:
  reward-contributor:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Assign Random Badge
        uses: actions/github-script@v6
        with:
          script: |
            const username = context.payload.pull_request?.user?.login || "test-user";
            const issue_number = context.issue.number || 1;

            const mainBadgeId = '1-B3va3balHY7upoN3nhNEnj1xFhzbcsr';
            const mainBadgeUrl = `https://drive.google.com/uc?export=view&id=${mainBadgeId}`;

            const badgePool = [
              { id: '1nheki_edqi1fguGmKeDe2xVhd41CAcoH', rarity: 'common' },
              { id: '1_kj94AZb6NkCso1ljA3vWF5HoTumwBhx', rarity: 'common' },
              { id: '1MlUM2RIqd8Q0ek67pMnTNqliqmKND2Rk', rarity: 'common' },
              { id: '1TI4XSRFUfANR5vnuyYhqFf8eWvHloeX2', rarity: 'common' },
              { id: '1x2eYK4oqihEXZoQ_eWnAgM0jXchYZpY4', rarity: 'common' },
              { id: '1otRyHexIqXtKLbCi6Fc8cPRBhzlQYXUd', rarity: 'epic' },
              { id: '17qZ9ZQ3P_jV29J7-qariHkRXgl74u6SZ', rarity: 'rare' },
              { id: '1Cmlm3odKq1VwOrFb1OpWjyTJVeVH8rxG', rarity: 'epic' },
              { id: '1rQrn7RMZOUoJ1Lo6J_Bq0taMI3Q8bziq', rarity: 'epic' },
              { id: '1BsBdIlUDxxweK1M6Pjmhtyd78aXOiBD5', rarity: 'rare' }
            ];

            const weights = {
              common: 5,
              rare: 2,
              epic: 1,
            };

            function weightedRandomSet(pool, count) {
              const expanded = pool.flatMap(b => Array(Math.round(weights[b.rarity] * 10)).fill(b));
              const uniqueSet = new Set();
              while (uniqueSet.size < count) {
                const pick = expanded[Math.floor(Math.random() * expanded.length)];
                uniqueSet.add(pick);
              }
              return Array.from(uniqueSet);
            }

            const selectedBadges = weightedRandomSet(badgePool, 3);
            const selectedIds = selectedBadges.map(b => b.id);

            let badgeHtml = `<div style="display: flex; gap: 10px; flex-wrap: wrap;">`;
            badgePool.forEach(badge => {
              const url = `https://drive.google.com/uc?export=view&id=${badge.id}`;
              if (selectedIds.includes(badge.id)) {
                badgeHtml += `<img src="${url}" width="200" height="200" style="border-radius: 10px;" alt="Unlocked Badge" />`;
              } else {
                badgeHtml += `<img src="${url}" width="60" height="60" style="opacity: 0.2; filter: grayscale(100%);" alt="Locked Badge" title="Locked â€” keep contributing to unlock!" />`;
              }
            });
            badgeHtml += `</div>`;

            const message =
              "ðŸŽ‰ <strong>Thanks @" + username + " for contributing to the <em>GSSOC FAQ Discord Bot</em>!</strong><br>" +
              "You've earned the <strong>Pro Contributor</strong> badge and unlocked <strong>3 DEV SLAYER</strong> Achievements!<br><br>" +
              badgeHtml +
              "<p style=\"font-size: 14px; color: #555;\">ðŸ”’ Some badges are still locked. Keep contributing PRs to unlock more rare and legendary achievements!</p>";

            github.rest.issues.createComment({
              issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
